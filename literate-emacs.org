#+title: Literate Emacs
#+author: michaeltd
#+date: <2019-12-22 Sun>

* [[load path]]

Add [[lisp][lisp]] & [[site-lisp][site-lisp]] to load path
Shamelessly stollen from centaur emacs

#+BEGIN_SRC emacs-lisp

;; Load path
;; Optimize: Force "lisp"" and "site-lisp" at the head to reduce the startup time.
(defun update-load-path (&rest _)
  "Update `load-path'."
  (push (expand-file-name "site-lisp" user-emacs-directory) load-path)
  (push (expand-file-name "lisp" user-emacs-directory) load-path))

(defun add-subdirs-to-load-path (&rest _)
  "Add subdirectories to `load-path'."
  (let ((default-directory
          (expand-file-name "site-lisp" user-emacs-directory)))
    (normal-top-level-add-subdirs-to-load-path)))

(advice-add #'package-initialize :after #'update-load-path)
(advice-add #'package-initialize :after #'add-subdirs-to-load-path)

(update-load-path)

#+END_SRC


* [[themes][themes]]

#+BEGIN_SRC emacs-lisp

(setq custom-safe-themes t)
  (add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
;; (load-theme 'dracula t)
;; (add-hook 'after-init-hook (lambda () (load-theme 'xresources)))
;; (add-hook 'emacs-startup-hook(lambda () (load-theme 'xresources)))

#+END_SRC


* [[https://sanemacs.com/][sanemacs]]

A minimal Emacs config that does just enough and nothing more.

#+BEGIN_SRC emacs-lisp

(load "~/.emacs.d/sanemacs.el" nil t)

;;; Your configuration goes below this line.
;;; use-package is already loaded and ready to go!
;;; use-package docs: https://github.com/jwiegley/use-package

#+END_SRC


* [[https://github.com/domtronn/all-the-icons.el][all-the-icons]]

Required by [[emacs-dashboard]]

#+BEGIN_SRC emacs-lisp

;; all the icons
(require 'all-the-icons)
(use-package all-the-icons :ensure t)

#+END_SRC


* [[https://github.com/emacs-dashboard/emacs-dashboard][emacs-dashboard]]

An extensible emacs startup screen showing you what’s most important.

#+BEGIN_SRC emacs-lisp

;; dashboard

(require 'dashboard)
(dashboard-setup-startup-hook)
;; Or if you use use-package
(use-package dashboard
  :ensure t
  :config 

  (dashboard-setup-startup-hook))

;; emacs --daemon
(setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))

;; Set the title
;; (setq dashboard-banner-logo-title "Welcome to Emacs Dashboard")
(setq dashboard-banner-logo-title "M-x butterfly")
;; Set the banner
(setq dashboard-startup-banner 'logo)
;; Value can be
;; 'official which displays the official emacs logo
;; 'logo which displays an alternative emacs logo
;; 1, 2 or 3 which displays one of the text banners
;; "path/to/your/image.png" which displays whatever image you would prefer

;; Content is not centered by default. To center, set
(setq dashboard-center-content t)

;; To disable shortcut "jump" indicators for each section, set
(setq dashboard-show-shortcuts nil)

;;To customize which widgets are displayed, you can use the following snippet
(setq dashboard-items '((recents  . 4)))

;;To add icons to the widget headings and their items:

(setq dashboard-set-heading-icons t)
(setq dashboard-set-file-icons t)

;;To modify heading icons with another icon from all-the-icons octicons:

(dashboard-modify-heading-icons '((recents . "file-text")
		    (bookmarks . "book")))

;;To show navigator below the banner:

(setq dashboard-set-navigator t)

;;To customize the buttons of the navigator like this:

;; Format: "(icon title help action face prefix suffix)"
(setq dashboard-navigator-buttons
`(;; line1
((,(all-the-icons-faicon "cloud" :height 1.1 :v-adjust 0.0)
  "Web"
  "Browse webpage"
  (lambda (&rest _) (browse-url "https://michaeltd.netlify.com/")))
(,(all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0)
  "Github"
  "Browse github"
  (lambda (&rest _) (browse-url "https://github.com/michaeltd/")))
(,(all-the-icons-faicon "twitter" :height 1.1 :v-adjust 0.0)
  "Twitter"
  "Browse twitter"
  (lambda (&rest _) (browse-url "https://twitter.com/tsouchlarakismd/")))
(,(all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0)
  "Linkedin"
  "Browse linkedin"
  (lambda (&rest _) (browse-url "https://www.linkedin.com/in/michaeltd/"))))))

;; ("★" "Star" "Show stars" (lambda (&rest _) (show-stars)) warning)
;; ("?" "" "?/h" #'show-help nil "<" ">")
;; line 2
;;((,(all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0)
;;"LinkedIN"
;;"Goto LinkedIN"
;;(lambda (&rest _) (browse-url "https://www.linkedin.com/in/michaeltd/")))
;;("⚑" nil "Show flags" (lambda (&rest _) (message "flag")) error))

;; ;;
;; To show info about the packages loaded and the init time:

(setq dashboard-set-init-info t)

;; end dashboard

#+END_SRC
