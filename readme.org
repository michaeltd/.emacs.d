#+title: .emacs.d
#+author: michaeltd
#+date: <2019-12-24 Tue>
#+html: <p align="center"><img src="assets/emacs-logo.png"/></p><p align="center"><a href="readme.org"><img src="assets/emacs.png"/></a></p>
#+BEGIN_COMMENT
<p align="center"><a href="https://www.gnu.org/software/emacs/"><img src="https://img.shields.io/badge/GNU%20Emacs-26.1-b48ead.svg?style=plastic"/></a> <a href="https://orgmode.org/"><img src="https://img.shields.io/badge/org--mode-9.3-489a9f.svg?style=plastic"/></a></p>
#+END_COMMENT
yet another .emacs.d

* [[lisp][load path]]

Add [[lisp][lisp]] & [[site-lisp][site-lisp]] to load path

#+BEGIN_SRC emacs-lisp

;; Load path
;; Optimize: Force "lisp"" and "site-lisp" at the head to reduce the startup time.
(defun update-load-path (&rest _)
  "Update `load-path'."
  (push (expand-file-name "site-lisp" user-emacs-directory) load-path)
  (push (expand-file-name "lisp" user-emacs-directory) load-path))

(defun add-subdirs-to-load-path (&rest _)
  "Add subdirectories to `load-path'."
  (let ((default-directory
          (expand-file-name "site-lisp" user-emacs-directory)))
    (normal-top-level-add-subdirs-to-load-path)))

(advice-add #'package-initialize :after #'update-load-path)
(advice-add #'package-initialize :after #'add-subdirs-to-load-path)

(update-load-path)

#+END_SRC


* [[themes][themes]]

#+BEGIN_SRC emacs-lisp

(setq custom-safe-themes t)
  (add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
;; (load-theme 'dracula t)
;; (add-hook 'after-init-hook (lambda () (load-theme 'xresources)))
;; (add-hook 'emacs-startup-hook(lambda () (load-theme 'xresources)))

#+END_SRC


* [[https://sanemacs.com/][sanemacs]]

A minimal Emacs config that does just enough and nothing more.

#+BEGIN_SRC emacs-lisp

(load "~/.emacs.d/sanemacs.el" nil t)

;;; Your configuration goes below this line.
;;; use-package is already loaded and ready to go!
;;; use-package docs: https://github.com/jwiegley/use-package

#+END_SRC


* [[https://github.com/domtronn/all-the-icons.el][all-the-icons]]

Required by [[emacs-dashboard]]

#+BEGIN_SRC emacs-lisp

;; all the icons
(require 'all-the-icons)
(use-package all-the-icons :ensure t)

#+END_SRC


* [[https://github.com/emacs-dashboard/emacs-dashboard][emacs-dashboard]]

An extensible emacs startup screen showing you what’s most important.

#+BEGIN_SRC emacs-lisp

  ;; dashboard

  (require 'dashboard)
  (dashboard-setup-startup-hook)
  ;; Or if you use use-package
  (use-package dashboard
    :ensure t
    :config 
    (dashboard-setup-startup-hook))

  ;; emacs --daemon
  (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))

  ;; Set the title

  ;; (setq dashboard-banner-logo-title "Welcome to Emacs Dashboard")
  ;; (setq dashboard-banner-logo-title "M-x butterfly")
  (setq dashboard-banner-logo-title "Welcome to the church of Emacs")
  ;; Set the banner
  ;;(setq dashboard-startup-banner "~/.emacs.d/assets/gnu.png")
  (setq dashboard-startup-banner 'logo)
  ;; Value can be
  ;; 'official which displays the official emacs logo
  ;; 'logo which displays an alternative emacs logo
  ;; 1, 2 or 3 which displays one of the text banners
  ;; "path/to/your/image.png" which displays whatever image you would prefer

  ;; Content is not centered by default. To center, set
  (setq dashboard-center-content t)

  ;; To disable shortcut "jump" indicators for each section, set
  (setq dashboard-show-shortcuts nil)

  ;;To customize which widgets are displayed, you can use the following snippet
  (setq dashboard-items '((recents  . 4)))

  ;;To add icons to the widget headings and their items:

  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)

  ;;To modify heading icons with another icon from all-the-icons octicons:

  (dashboard-modify-heading-icons '((recents . "file-text")
      (bookmarks . "book")))

  ;;To show navigator below the banner:

  (setq dashboard-set-navigator t)

  ;;To customize the buttons of the navigator like this:

  ;; (setq dashboard-navigator-buttons
  ;;       `(;; line1
  ;;         ((,(all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0)
  ;;          "Homepage"
  ;;          "Browse homepage"
  ;;          (lambda (&rest _) (browse-url "homepage")))
  ;;         ("★" "Star" "Show stars" (lambda (&rest _) (show-stars)) warning)
  ;;         ("?" "" "?/h" #'show-help nil "<" ">"))
  ;;          ;; line 2
  ;;         ((,(all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0)
  ;;           "Linkedin"
  ;;           ""
  ;;           (lambda (&rest _) (browse-url "homepage")))
  ;;          ("⚑" nil "Show flags" (lambda (&rest _) (message "flag")) error))))

  ;; Format: "(icon title help action face prefix suffix)"
  (setq dashboard-navigator-buttons
      `(;; line1
	  ((,(all-the-icons-faicon "cloud" :height 1.1 :v-adjust 0.0) "Web" "Browse webpage"
	      (lambda (&rest _) (browse-url "https://michaeltd.netlify.com/")))
	  (,(all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0) "Github" "Browse github"
	      (lambda (&rest _) (browse-url "https://github.com/michaeltd/")))
	  (,(all-the-icons-faicon "twitter" :height 1.1 :v-adjust 0.0) "Twitter" "Browse twitter"
	      (lambda (&rest _) (browse-url "https://twitter.com/tsouchlarakismd/")))
	  (,(all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0) "Linkedin" "Browse linkedin"
	      (lambda (&rest _) (browse-url "https://www.linkedin.com/in/michaeltd/"))))))

  ;;
  ;; To show info about the packages loaded and the init time:

  (setq dashboard-set-init-info t)

  ;; Also, the message can be customized like this:

  ;; (setq dashboard-init-info "This is an init message!")

  ;; A randomly selected footnote will be displayed. To disable it:

  ;; (setq dashboard-set-footer nil)

  ;; To customize it and customize its icon;

  ;; (setq dashboard-footer "Dashboard is pretty cool!")
  (setq dashboard-footer-icon (all-the-icons-octicon "dashboard"
						     :height 1.1
						     :v-adjust -0.05
						     :face 'font-lock-keyword-face))

  ;; Org mode’s agenda

  ;; To display today’s agenda items on the dashboard, add agenda to dashboard-items:

  ;;(add-to-list 'dashboard-items '(agenda) t)

  ;; To show agenda for the upcoming seven days set the variable show-week-agenda-p to t.

  ;; (setq show-week-agenda-p t)

  ;; Note that setting list-size for the agenda list is intentionally ignored; all agenda items for the current day will be displayed.

  ;; To customize which categories from the agenda items should be visible in the dashboard set the dashboard-org-agenda-categories to the list of categories you need.

  ;; (setq dashboard-org-agenda-categories '("Tasks" "Appointments"))

  ;; end dashboard

#+END_SRC


* [[https://www.emacswiki.org/emacs/ModeLineConfiguration][mode-line]]

#+BEGIN_SRC emacs-lisp

;; Enable the display of the current time, see DisplayTime
(display-time-mode 1)
;; Enable or disable the display of the current line number, see also LineNumbers 
(line-number-mode 1) 
;; Enable or disable the display of the current column number
(column-number-mode 1) 
;; (for Emacs 22 and up) – Enable or disable the current buffer size, Emacs 22 and later, see size-indication-mode
(size-indication-mode 1)
;; Enable or disable laptop battery information, see DisplayBatteryMode.
(display-battery-mode 1)

#+END_SRC


* [[https://orgmode.org/worg/org-contrib/babel/][org-babel]]

#+BEGIN_SRC emacs-lisp
;; Org-Babel tangle
(require 'ob-tangle)

;; Setup Babel languages. Can now do Literate Programming
(org-babel-do-load-languages 'org-babel-load-languages
'((python . t)
(shell . t)
(emacs-lisp . t)
(ledger . t)
(ditaa . t)
(js . t)
(C . t)))
#+END_SRC


* [[https://www.emacswiki.org/emacs/InteractivelyDoThings][ido-mode]]

#+BEGIN_SRC emacs-lisp

  ;; (require 'ido)
  ;;    (setq ido-enable-flex-matching t)
  ;;    (setq ido-everywhere t)
  ;;    (ido-mode t)

#+END_SRC

